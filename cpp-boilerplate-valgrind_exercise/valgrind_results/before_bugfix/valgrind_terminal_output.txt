Command -> valgrind ./app/shell-app

==22298== Memcheck, a memory error detector
==22298== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22298== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==22298== Command: ./app/shell-app
==22298== 
Averaged sensor reading: 10
==22298== Conditional jump or move depends on uninitialised value(s)
==22298==    at 0x401DC7: main (main.cpp:9)
==22298== 
==22298== 
==22298== HEAP SUMMARY:
==22298==     in use at exit: 72,748 bytes in 3 blocks
==22298==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==22298== 
==22298== LEAK SUMMARY:
==22298==    definitely lost: 24 bytes in 1 blocks
==22298==    indirectly lost: 20 bytes in 1 blocks
==22298==      possibly lost: 0 bytes in 0 blocks
==22298==    still reachable: 72,704 bytes in 1 blocks
==22298==         suppressed: 0 bytes in 0 blocks
==22298== Rerun with --leak-check=full to see details of leaked memory
==22298== 
==22298== For counts of detected and suppressed errors, rerun with: -v
==22298== Use --track-origins=yes to see where uninitialised values come from
==22298== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Command -> valgrind --tool=helgrind ./app/shell-app

==22317== Helgrind, a thread error detector
==22317== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==22317== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==22317== Command: ./app/shell-app
==22317== 
Averaged sensor reading: 10
==22317== 
==22317== For counts of detected and suppressed errors, rerun with: -v
==22317== Use --history-level=approx or =none to gain increased speed, at
==22317== the cost of reduced accuracy of conflicting-access information
==22317== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Command ->  valgrind --leak-check=full ./app/shell-app 

==22382== Memcheck, a memory error detector
==22382== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22382== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==22382== Command: ./app/shell-app
==22382== 
Averaged sensor reading: 10
==22382== Conditional jump or move depends on uninitialised value(s)
==22382==    at 0x401DC7: main (main.cpp:9)
==22382== 
==22382== 
==22382== HEAP SUMMARY:
==22382==     in use at exit: 72,748 bytes in 3 blocks
==22382==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==22382== 
==22382== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==22382==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==22382==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==22382==    by 0x401D9A: main (main.cpp:7)
==22382== 
==22382== LEAK SUMMARY:
==22382==    definitely lost: 24 bytes in 1 blocks
==22382==    indirectly lost: 20 bytes in 1 blocks
==22382==      possibly lost: 0 bytes in 0 blocks
==22382==    still reachable: 72,704 bytes in 1 blocks
==22382==         suppressed: 0 bytes in 0 blocks
==22382== Reachable blocks (those to which a pointer was found) are not shown.
==22382== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22382== 
==22382== For counts of detected and suppressed errors, rerun with: -v
==22382== Use --track-origins=yes to see where uninitialised values come from
==22382== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Command -> valgrind --leak-check=full --show-leak-kinds=all ./app/shell-app

==23649== Memcheck, a memory error detector
==23649== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23649== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==23649== Command: ./app/shell-app
==23649== 
Averaged sensor reading: 10
==23649== Conditional jump or move depends on uninitialised value(s)
==23649==    at 0x401DC7: main (main.cpp:9)
==23649== 
==23649== 
==23649== HEAP SUMMARY:
==23649==     in use at exit: 72,748 bytes in 3 blocks
==23649==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==23649== 
==23649== 20 bytes in 1 blocks are indirectly lost in loss record 1 of 3
==23649==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23649==    by 0x40265B: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:104)
==23649==    by 0x4025C8: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:491)
==23649==    by 0x402529: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:170)
==23649==    by 0x40241E: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:185)
==23649==    by 0x40226A: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:136)
==23649==    by 0x4020A1: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:291)
==23649==    by 0x401F06: AnalogSensor::Read() (AnalogSensor.cpp:16)
==23649==    by 0x401D9A: main (main.cpp:7)
==23649== 
==23649== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==23649==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23649==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==23649==    by 0x401D9A: main (main.cpp:7)
==23649== 
==23649== 72,704 bytes in 1 blocks are still reachable in loss record 3 of 3
==23649==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23649==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==23649==    by 0x40106B9: call_init.part.0 (dl-init.c:72)
==23649==    by 0x40107CA: call_init (dl-init.c:30)
==23649==    by 0x40107CA: _dl_init (dl-init.c:120)
==23649==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==23649== 
==23649== LEAK SUMMARY:
==23649==    definitely lost: 24 bytes in 1 blocks
==23649==    indirectly lost: 20 bytes in 1 blocks
==23649==      possibly lost: 0 bytes in 0 blocks
==23649==    still reachable: 72,704 bytes in 1 blocks
==23649==         suppressed: 0 bytes in 0 blocks
==23649== 
==23649== For counts of detected and suppressed errors, rerun with: -v
==23649== Use --track-origins=yes to see where uninitialised values come from
==23649== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Command -> valgrind --tool=callgrind ./app/shell-app 

==22598== Callgrind, a call-graph generating cache profiler
==22598== Copyright (C) 2002-2015, and GNU GPL'd, by Josef Weidendorfer et al.
==22598== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==22598== Command: ./app/shell-app
==22598== 
==22598== For interactive control, run 'callgrind_control -h'.
Averaged sensor reading: 10
==22598== 
==22598== Events    : Ir
==22598== Collected : 2193428
==22598== 
==22598== I   refs:      2,193,428
